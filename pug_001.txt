PUGJS is A Preprocessor Like Sass With CSS
==========================================
Note: PugJS Uses JavaScript To Compile The Code To HTML Language

Installiation PUGJS
===================
1 - npm command prompt ===> npm install pug | npm i pug
2 - npm command prompt ===> npm install pug-cli -g
3 - For Check About Version Of PugJS ===> pug -V
4 - For Get All Commandars ===> pug --help
cli ===> Stands From Command Line Interface

=========================================================
===> How Do You Run PugJS File << Very Important >>  <===
=========================================================
Note: Create File In Your Box ( Project ) ===> nameFile.pug

1 - Open Node.js Command Prompt
2 - Write ===> pug path-of-file-pug -w ===> For Make Watching For Pug File
3 - For Out From Watching Mode Click ===> Ctrl + c
4 - For Make Watching And Select Position Of File Render ===> pug path-of-file-pug -w -o new-path-for-file-render
Note: In Previous Points It Will Convert Pug File To HTML In << One Line >>
    If You Want To Render File In Multiline HTML Write:
5 - pug path-of-file-pug -w -P

=====================
=== Start Lessons ===
=====================

Lesson 1 ===> Types Of Doctype
==============================
1 - doctype ===> <!DOCTYPE html>
2 - doctype html ===> <!DOCTYPE html>
3 - ... And More ===> Search about doctype in pug

Lesson 2 ===> The Indentation <<< المسافات >>>
// Empty Spaces in The PugJs is very important
//- Example 1:
html 
    head 
    body 
        div Mohamed Nour Abdo
//- The output is :
    <html> 
        <head> </head>
    <body> 
        <div>Mohamed Nour Abdo</div>
    </body>
    </html>
//- Example 2:
div
    div 
        p Nour
//- The output is :
    <div>
        <div>
            <p>Nour</p>
        </div>
    </div>
//- Example 3:
doctype
html 
    head 
        title My Pug Template 
    body 
        div 
            span I am span
//- The output is :
    <!DOCTYPE html>
    <html> 
    <head> 
        <title>My Pug Template </title>
    </head>
    <body> 
        <div> <span>I am span</span></div>
    </body>
    </html>

Lesson 3 ===> Tags + Elements (Build Elements in PugJS)
//- Example 1:
doctype
html 
    head 
        title My Pug Template 
    body 
        div 
            p Mohamed Nour
            h1 a
//- The outout is :
    <!DOCTYPE html>
    <html> 
    <head> 
        <title>My Pug Template </title>
    </head>
    <body> 
        <div> 
        <p>Mohamed Nour</p>
        <h1>a</h1> // a is not Element, it's a text
        </div>
    </body>
    </html>
//- Example 2:
doctype
html 
    head 
        title My Pug Template 
    body 
        div 
            p Mohamed Nour
            h1: a Mohamed
//- The output is :
    <!DOCTYPE html>
    <html> 
    <head> 
        <title>My Pug Template </title>
    </head>
    <body> 
        <div> 
        <p>Mohamed Nour</p>
        <h1><a>Mohamed</a></h1> // a is an Element
        </div>
    </body>
    </html>
// You can use nautre Element Like <p> text </p> in PugJS

Lesson 4 ===> Comments & Special Features
Comments :
1 - // This Comment Show in HTML File And in PugJS File
2 - //- This Comment Show Just in PugJS File
3 - //- 
        This Multiple Commments (Doesn't Show in HTML File)
4 - //
        This Multiple Commments (Show in HTML File)
//- عندما تنشأ عنصر بطريقة اتش تي ام ال في داخل البغ جي اس بعد سطر عادي فإنه سيتم التعامل معه على نفس السطر السابق له
//- Example 1:
p Mohamed 
<a>Nour</a>
//- <p>Mohamed </p><a>Nour</a>

Lesson 5 ===> WhiteSpace Control
1 - البغ جي اس يحذف الفراغات بين العناصر تلقائياً
        2 - المسافة داخل العنصر لا تحذف يعني بالمنطق يعتبرها محرف
        3 - في حال كتبت اي سيعتبرها عنصر إذا بدك يعتبرها نص أكتبها بالشكل
            | a ===> Text (| bibeline)
            a ===> Element
//- Example 1:
    Write This By PugJS :
        <p>I Love <b>PugJS<b> And<b> SASS</b></p>
p I Love
    b PugJS
    | And 
    b SASS
//- OR
p 
    | I Love
    b PugJS
    | And 
    b SASS
//- The output is : <p>I Love<b>PugJS</b>And <b>SASS</b></p>
p 
    | This is a paragragh
//- لأنه سيعتبرها أبن لأب في الأعلى
    <p>
        This is a paragragh</p>
    



    لجعل عنصر يأخذ سطر كامل لحالو ضع قبله علامتي | حيث أن كل منها في سطر لحالو
    For Example :
    |
    |
    a Nour

    ===> النتيجة ستكون بالشكل ===> <a>Nour</a>
    

    That means :
    1 - For ELement (Take Whole Line) :
    |
    |
    nameElement Content
    2 - For Text (Take Whole Line) :
    |
    | Text
    3 - For Text (Doesn't Take Whole Line) :
    | Text
    4 - . bloack :
    .
        Text
    تعترف بالنص على أنه نص عادي ولكن أي شي بالنص هو نص عادي أيضاً حتى لو كانت إشارة | فهي نص عادي في نظره
    يمكنك استخدام . مع | لعمل محتوى في سطر منفصل ولكن
    .
        |
        Mohamed
    راح يطف سطر ولكن راح تنطبع إشارة | في السطر العلوي

    الحل الصح هو :
    |
    |
    .
        Text
p Mohamed Nour Abdo
|
|
.
    Nour

Lesson 6 ===> Attributes
Part(1) :
1 - Syntax ===> nameElement(attr1, attr2, ...) contentElement
2 - nameElement.nameClass contentElement
3 - nameElement#nameId contentElement
4 - .nameClass contentElement ===> Build Element By Div ===> <div> Content </div>
Part(2) :
Another Syntax for Attribute :
(A)
nameElement(
    attr1=v1,
    attr2=v2,
    ...
) contentElement
(B)
nameElement(
    attr1=v1,
    attr2=v2,
    ...
    style="color: red; ..."
    or
    style={"color":"red", "font-size":"20px"} ===> Way Object
) contentElement
//- Examples :
|
|
img(src="...", alt="Error in Image Location")
|
|
a(href="https://youtube.com") Youtube

p(
    style={"color":"red", "font-size":"20px"}
) Mohamed Nour

Lesson 7 ===> Include Files ===> مثل فكرة اليوس في لغة الساس
يعني نقوم بعمل أكثر من ملف بغ وكل ملف لشي ثم نقوم بعمل تضمين لهذه الملفات داخل الملف الهدف
Syntax :
include "file.pug" or include "file" or
include file.pug or include file

Lesson 8 ===> Working With Code << Use JavaScript >>
1 - Unbuffered Code
    تبدأ بداش - وتستخدم لحجز متغير أو حلقة فور أو سلسلة طبعاً من قواعد جافا سكربت
2 - Buffered Code
    تبدأ ب = يساوي
    ==مثال==
    p= `This is Code ` + `<escaped>!`;
    النتيجة
    <p>This is Code&lt;Escaped&gt;!</p>
3 - Unescaped Buffered Code
    يبدأ ب != لا يساوي
    ==مثال==
    p!= `This Code is <Strong>not</strong> Escaped`;
    النتيجة
    <p>This Code is <Strong>not</strong> Escaped</p>
//- Example 1:
- for(var x=0;x<10;x++)
    li item
//- Output is :
    <li>item</li>
    <li>item</li>
    <li>item</li>
    <li>item</li>
    <li>item</li>
    <li>item</li>
    <li>item</li>
    <li>item</li>
    <li>item</li>
    <li>item</li>
- var myVaribale = `red`;
//- يجب إنشاء ملف خاص للمتغيرات ولأي عملية ملفها الخاص

//- Example 2:
p= `This is Code` + `<Escaped>!`

//- Example 3:
p!= `This Code is <Strong>not</strong> Escaped`

Lesson 9 ===> Iteration In PugJS
For - While - Each
        1 - For Loop
        Example :
        ul
            - for (var i = 0;i<10;i++)
                li item
        2 - While Loop
        Example :
        - var n = 0;
        ul
            while n<4
                li=n++
        3 - Each Loop
        Example :
        each val in [1, 2, 3, 4, 'Five', 6, 7, 8]
            div= val
        Output is Some Divs
//- Examples :
each val,index in ["one", 2,3,4,"Five"]
    div=index+" | "+val 
//- 
    <p>This Code is <Strong>not</strong> Escaped</p>
    <div>0 | one</div>
    <div>1 | 2</div>
    <div>2 | 3</div>
    <div>3 | 4</div>
    <div>4 | Five</div>
- var arr = ["HTML", "CSS", "PHP", "JAVASCRIPT", "MYSQL"];
each val, index in arr
    div= index + " : " + val
//- 
    <div>0 : HTML</div>
    <div>1 : CSS</div>
    <div>2 : PHP</div>
    <div>3 : JAVASCRIPT</div>
    <div>4 : MYSQL</div>
- var arr = [];
each index, val in arr 
    div= index + " : " + val 
else 
    div There isn't value 
//- <div>There isn't value</div>

//- New Syntax For Each Loop :
    each
        ....
    else
        Not found any value
//- Use Object With Each
ul 
    each val, key in {"One":1, "Two":2, "Three":3}
        li= val
//- 
    <ul> 
        <li>1</li>
        <li>2</li>
        <li>3</li>
    </ul>
- var arr = [];
ul
    each val in arr.length?arr:["There are no values"]
        li= val
//- 
    <ul>
        <li>There are no values</li>
    </ul>

Lesson 10 ===> Interbolation
A - String
    a - Enscaped
        Example :
        - var a = `<a>A</a>`;
        p Hellp #{a}
        هنا سيرجع كل شكل خاص لكوده في الانتيتيس
    b - Unescaped
        Example :
        - var a = `<a>A</a>`;
        p Hellp !{a}
        هنا سيرجع النص على حاله
B - Tag
    a - Tag Interbolation
        Example :
        p Hello #[b Mohamed]
        #[Code Of Pug]
//- ملاحظة إذا سبقت الانتربوليشن ب\ كأنك عم تقول للمترجم اطبعلي الانتربوليشن على حالها
//- #{`#{Nour}`} ===> Print #{Nour}

Lesson 11 ===> Mixins ===> عبارة عن قطعة من الكود استخدمها في أي مكان بدي ياه
Syntax :
    mixin nameMixin
        ............
        ...تفاصيل...
        ............
    الأستدعاء
    +nameMixin
    Or
    mixin nameMixin(title, ..., parameters)
        ............
        ...تفاصيل...
        ............
    +nameMixin(ValuesOfParametrs)
//- Example :
mixin list
    ul 
        li Home 
        li Contact Us 
        li Portfolio
+list
//- ينصح بعمل ملف خاص بالمكسين وعمل تضمين له في بداية البغ
//- 
    Main Pug===> Include Style.Pug
            ===> Include Mixin.pug
            ===> Include Variable.pug
    في هذه الحالة أي شيء وفي أي مكان سيتم قراءته من خلال أي ملف لأنه فعلياً كل الملفات صارو جزء لا يتجزأ متصلين

Lesson 12 ===> Inheritance ===> نظام الوراثة في البغ جي أس
إن مفهوم الوراثة في الساس يختلف عن هنا لأن في الساس يتم توريث شيء معين دون التعديل عليه أما في البغ يتم توريث شيء معين مع التعديل على شيء منه وذلك عبر كتابة الأمر التالي
block anyName
    التعليمات التي تريد تبديلها في حال ورثت الملف
طريقة الوراثة أكتب ===> extends nameFilePug.pug
ثم إذا بدك تعدل على جزء من الصفحة أكتب أسم البلوك ثمطف سطر ثم تاب ثم محتوى جديد بالشكل
block nameBloack
    newContent
الوراثة بتصير لملف كامل حصراً
1 - تعلمنا أننا نستطيع الوراثة مع التعديل جزء من الملف
2 - block append nameBlock
        newContentAfterBlock
3 - block prepend nameBlock
        newContentBeforeBlock
حالة الأستبدال هي الحالة الأفتراضية للبلوك

Lesson 12 ===> Switch Case Statement ===> Case
//- Example 1:
- var friends = 10
case friends
  when 0
    p you have no friends
  when 1
    p you have a friend
  default
    p you have #{friends} friends
//- <p>you have 10 friends</p>
//- Example 2:
- var friends = 0
case friends
  when 0
  when 1
    p you have very few friends
  default
    p you have #{friends} friends
//- <p>you have very few friends</p>
//- Example 3:
- var friends = 0
case friends
  when 0
    - break
  when 1
    p you have very few friends
  default
    p you have #{friends} friends
//- Don't have any output
//- Example 4 (Block Expansion):
- var friends = 1;
case friends
  when 0: p you have no friends
  when 1: p you have a friend
  default: p you have #{friends} friends
